/**
 * @fileoverview This file contains the CSS styles for the grid-showcase project.
 * 
 * @author [Souhayl]
 * @version [1.0.0 version]
 * @date [15/01/2025]
 * 
 * @descriptionv
 * This stylesheet includes the styles for the various components and elements using grid layout.
 */

/* Reset CSS */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Global Styles */
body {
  font-family: "Roboto", sans-serif;
  background-color: #09011b;
}

.popup-overlay {
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.3);
  z-index: 1000;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
}

.popup-box {
  width: 40px;
  height: 40px;
  padding: 10px;
  position: fixed;
  top: 110%;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  z-index: 1001;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
}
.popup-box.show {
  width: 700px;
  height: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.popup-box img:not(.close-button) {
  width: 100%;
  height: auto;
  object-fit: cover;
  border-radius: 10px;
  opacity: 0;
}
.popup-box::before {
  content: "";
  width: 100px;
  height: 100px;
  border-left: 7px solid #ffce00;
  border-top: 7px solid #ffce00;
  position: absolute;
  left: -15px;
  top: -15px;
}
.popup-box::after {
  content: "";
  width: 100px;
  height: 100px;
  border-right: 7px solid #ffce00;
  border-bottom: 7px solid #ffce00;
  position: absolute;
  right: -15px;
  bottom: -15px;
}
.popup-box .close-button {
  width: 40px;
  height: 40px;
  position: absolute;
  left: 50%;
  top: 0;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  cursor: pointer;
}

/* Container */
.container {
  width: 90%;
  height: 650px;
  margin: 20px auto;
  display: grid;
  grid-template-columns: repeat(12, minmax(100px, 1fr));
  grid-template-rows: repeat(12, 1fr);
  position: relative;
  overflow: hidden;
}

.container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: 0.5s;
}

.container > div {
  font-size: 80%;
  color: white;
  border: 7px solid #09011b;
  display: flex;
  flex-wrap: wrap;
  align-content: end;
  padding: 5px;
  line-height: 1.4;
  overflow: hidden;
  cursor: pointer;
}
.container > div:hover {
  background-image: linear-gradient(0deg, black, transparent);
}
.container div div {
  transform: translateY(100%);
  transition: 0.3s;
}
.container > div:hover div {
  transform: translateY(0);
}

.container div:nth-child(even):hover ~ img {
  transform: translate(-10px, -10px);
}
.container div:nth-child(odd):hover ~ img {
  transform: translate(10px, 10px);
}

.container div:nth-of-type(1) {
  grid-row: span 5;
}

.container div:nth-of-type(2),
.container div:nth-of-type(13),
.container div:nth-of-type(32) {
  grid-column: span 2;
}

.container div:nth-of-type(3),
.container div:nth-of-type(6),
.container div:nth-of-type(18),
.container div:nth-of-type(23),
.container div:nth-of-type(25) {
  grid-area: span 2 / span 2;
}

.container div:nth-of-type(5),
.container div:nth-of-type(19),
.container div:nth-of-type(33) {
  grid-row: span 3;
}

.container div:nth-of-type(7) {
  grid-area: span 4 / span 3;
}

.container div:nth-of-type(12),
.container div:nth-of-type(27) {
  grid-area: span 2 / span 3;
}

.container div:nth-of-type(20) {
  grid-area: span 5 / span 2;
}

.container div:nth-of-type(21) {
  grid-row: span 6;
}

.container div:nth-of-type(28),
.container div:nth-of-type(48) {
  grid-column: span 3;
}

.container div:nth-of-type(35) {
  grid-row: span 4;
}

.container div:nth-of-type(36),
.container div:nth-of-type(38) {
  grid-area: span 3 / span 2;
}

.container div:where(:nth-of-type(39), :nth-of-type(42)) {
  grid-column: span 4;
}

.container
  :where(
    :nth-of-type(9),
    :nth-of-type(11),
    :nth-of-type(15),
    :nth-of-type(16),
    :nth-of-type(31),
    :nth-of-type(34),
    :nth-of-type(41),
    :nth-of-type(43)
  ) {
  grid-row: span 2;
}
